#include <16F877a.h>
#device ADC=8

#FUSES XT
#use delay(clock=4MHz)
#use I2C(master, sda=PIN_c4, scl=PIN_c3, slow)

#include "MPU6050.C"
#include <math.h>

signed int8 A_data[6];
signed int8 temp_data[2];
signed int8 G_data[6];
signed int16 Xa=0,Ya=0,Za=0;
signed int16 temp=0;
signed int16 Xg=0,Yg=0,Zg=0;

void main()
{
   set_tris_b(0x00);
   set_tris_d(0x00);
   

   delay_ms(2);
   
   mpu6050_init();
    
   while(1)
   {
      A_data[0]=mpu6050_read(0x3B); //X eksen(LSB) ilk biti okunuyor
      A_data[1]=mpu6050_read(0x3C); //X eksen(MSB) son biti okunuyor
      A_data[2]=mpu6050_read(0x3D); //Y eksen(LSB) ilk biti okunuyor
      A_data[3]=mpu6050_read(0x3E); //Y eksen(MSB) son biti okunuyor
      A_data[4]=mpu6050_read(0x3F); //Z eksen(LSB) ilk biti okunuyor
      A_data[5]=mpu6050_read(0x40); //Z eksen(MSB) son biti okunuyor
         
      temp_data[0]=mpu6050_read(0x41);
      temp_data[1]=mpu6050_read(0x42);
         
      G_data[0]=mpu6050_read(0x43); //X eksen(LSB) ilk biti okunuyor
      G_data[1]=mpu6050_read(0x44); //X eksen(MSB) son biti okunuyor
      G_data[2]=mpu6050_read(0x45); //Y eksen(LSB) ilk biti okunuyor
      G_data[3]=mpu6050_read(0x46); //Y eksen(MSB) son biti okunuyor
      G_data[4]=mpu6050_read(0x47); //Z eksen(LSB) ilk biti okunuyor
      G_data[5]=mpu6050_read(0x48); //Z eksen(MSB) son biti okunuyor
        
      Xa=make16(A_data[0],A_data[1]);
      Ya=make16(A_data[2],A_data[3]);
      Za=make16(A_data[4],A_data[5]);
        
      temp=make16(temp_data[0],temp_data[1]);
      temp=temp/340 + 36.53;
       
      Xg=make16(G_data[0],G_data[1]);
      Yg=make16(G_data[2],G_data[3]);
      Zg=make16(G_data[4],G_data[5]);
       
       
      float Heading = atan2((signed int16)Ya,(signed int16)Xa)* 180 / pi + 180;
         
      
      /* ############################################################################################################### */
      // X_ekseni olasiliklari
      
      if (Xa<=-12000 && Ya>=-500 && Ya<=500) 
      {        
         output_b(0b00111111);
         output_d(0b11111111);
         delay_ms(10);
      }
      
      if (Xa>=-12000 && Xa<=-8000 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11011111);
         output_d(0b00111100);
         
         output_b(0b00111111);
         output_d(0b01111110);
         delay_ms(10);
      }
   
      if (Xa>=-8000 && Xa<=-4000 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b00001111);
         output_d(0b00111100);
         delay_ms(10);
      }
   
      if (Xa>=-4000 && Xa<=-500 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b10000111);
         output_d(0b00111100);
         delay_ms(10);
      }
   
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11000011);
         output_d(0b00111100);
         delay_ms(10);
      }
      
      if (Xa>=500 && Xa<=4000 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11100001);
         output_d(0b00111100);
         delay_ms(10);
      }
      
      if (Xa>=4000 && Xa<=8000 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11110000);
         output_d(0b00111100);
         delay_ms(10);
      }
      
      if (Xa>=8000 && Xa<=12000 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11111011);
         output_d(0b00111100);
         
         output_b(0b11111100);
         output_d(0b01111110);       
         delay_ms(10);
      }
      
      if (Xa>=12000 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11111100);
         output_d(0b11111111);
         delay_ms(10);
      }
            
      /* ############################################################################################################### */
      
      /* ############################################################################################################### */
      // Y_ekseni olasiliklari
      
      /*if (Xa>=-500 && Xa<=500 && Ya<=-12000)
      {        
         output_b(0b11000011);
         output_d(0b00111100);
         delay_ms(10);
      }
      
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500)
      {
         output_b(0b11011111);
         output_d(0b00111100);
         
         output_b(0b00111111);
         output_d(0b01111110);
         delay_ms(10);
      }
   
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500)
      {
         output_b(0b00001111);
         output_d(0b00111100);
         delay_ms(10);
      }
   
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500)
      {
         output_b(0b10000111);
         output_d(0b00111100);
         delay_ms(10);
      }
   
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500)
      {
         output_b(0b11000011);
         output_d(0b00111100);
         delay_ms(10);
      }
      
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500)
      {
         output_b(0b11100001);
         output_d(0b00111100);
         delay_ms(10);
      }
      
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11110000);
         output_d(0b00111100);
         delay_ms(10);
      }
      
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11111011);
         output_d(0b00111100);
         
         output_b(0b11111100);
         output_d(0b01111110);       
         delay_ms(10);
      }
      
      if (Xa>=-500 && Xa<=500 && Ya>=-500 && Ya<=500) 
      {
         output_b(0b11111100);
         output_d(0b11111111);
         delay_ms(10);
      }*/
            
      /* ############################################################################################################### */
      
      delay_ms(2);
   }
   
}
   



