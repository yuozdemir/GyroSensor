#include <16F877a.h>

#FUSES XT
#use delay(clock=4MHz)
#use I2C(master, sda=PIN_c4, scl=PIN_c3, slow)

#include "MPU6050.C"

signed int8 A_data[6];
signed int16 Xa=0,Ya=0;

void x0()

{
   /* ############################################################################################################### */
   // X'in -3 konumu icin olasiliklar
   
   
   if (Xa>=-17000 && Xa<=-11000 && Ya>=-17000 && Ya<=-11000) 
   {
      output_b(0b11111100);
      output_d(0b00000011);
      delay_ms(100);
   }
   
   if (Xa>=-17000 && Xa<=-11000 && Ya>=-11000 && Ya<=-6000) 
   {
      output_b(0b11111100);
      output_d(0b00000110);
      delay_ms(100);
   }
   
   if (Xa>=-17000 && Xa<=-11000 && Ya>=-6000 && Ya<=-2000) 
   {
      output_b(0b11111100);
      output_d(0b00001100);
      delay_ms(100);
   }
   
   if (Xa>=-17000 && Xa<=-11000 && Ya>=-2000 && Ya<=2000) 
   {
      output_b(0b11111100);
      output_d(0b00011000);
      delay_ms(100);
   }
   
   if (Xa>=-17000 && Xa<=-11000 && Ya>=2000 && Ya<=6000) 
   {
      output_b(0b11111100);
      output_d(0b00110000);
      delay_ms(100);
   }
   
   if (Xa>=-17000 && Xa<=-11000 && Ya>=6000 && Ya<=11000) 
   {
      output_b(0b11111100);
      output_d(0b01100000);
      delay_ms(100);
   }
   
   if (Xa>=-17000 && Xa<=-11000 && Ya>=11000 && Ya<=17000) 
   {
      output_b(0b11111100);
      output_d(0b11000000);
      delay_ms(100);
   }
   
   
   /* ############################################################################################################### */
}

void x1()
{
   /* ############################################################################################################### */
   // X'in -2 konumu icin olasiliklar
   
   
   if (Xa>=-11000 && Xa<=-6000 && Ya>=-17000 && Ya<=-11000) 
   {
      output_b(0b11111001);
      output_d(0b00000011);
      delay_ms(100);
   }
   
   if (Xa>=-11000 && Xa<=-6000 && Ya>=-11000 && Ya<=-6000) 
   {
      output_b(0b11111001);
      output_d(0b00000110);
      delay_ms(100);
   }
   
   if (Xa>=-11000 && Xa<=-6000 && Ya>=-6000 && Ya<=-2000) 
   {
      output_b(0b11111001);
      output_d(0b00001100);
      delay_ms(100);
   }
   
   if (Xa>=-11000 && Xa<=-6000 && Ya>=-2000 && Ya<=2000) 
   {
      output_b(0b11111001);
      output_d(0b00011000);
      delay_ms(100);
   }
   
   if (Xa>=-11000 && Xa<=-6000 && Ya>=2000 && Ya<=6000) 
   {
      output_b(0b11111001);
      output_d(0b00110000);
      delay_ms(100);
   }
   
   if (Xa>=-11000 && Xa<=-6000 && Ya>=6000 && Ya<=11000) 
   {
      output_b(0b11111001);
      output_d(0b01100000);
      delay_ms(100);
   }
   
   if (Xa>=-11000 && Xa<=-6000 && Ya>=11000 && Ya<=17000) 
   {
      output_b(0b11111001);
      output_d(0b11000000);
      delay_ms(100);
   }
   
   
   /* ############################################################################################################### */
}

void x2()
{
   /* ############################################################################################################### */
   // X'in -1 konumu icin olasiliklar
   
   
   if (Xa>=-6000 && Xa<=-2000 && Ya>=-17000 && Ya<=-11000) 
   {
      output_b(0b11110011);
      output_d(0b00000011);
      delay_ms(100);
   }
   
   if (Xa>=-6000 && Xa<=-2000 && Ya>=-11000 && Ya<=-6000) 
   {
      output_b(0b11110011);
      output_d(0b00000110);
      delay_ms(100);
   }
   
   if (Xa>=-6000 && Xa<=-2000 && Ya>=-6000 && Ya<=-2000) 
   {
      output_b(0b11110011);
      output_d(0b00001100);
      delay_ms(100);
   }
   
   if (Xa>=-6000 && Xa<=-2000 && Ya>=-2000 && Ya<=2000) 
   {
      output_b(0b11110011);
      output_d(0b00011000);
      delay_ms(100);
   }
   
   if (Xa>=-6000 && Xa<=-2000 && Ya>=2000 && Ya<=6000) 
   {
      output_b(0b11110011);
      output_d(0b00110000);
      delay_ms(100);
   }
       
   if (Xa>=-6000 && Xa<=-2000 && Ya>=6000 && Ya<=11000) 
   {
      output_b(0b11110011);
      output_d(0b01100000);
      delay_ms(100);
   }
       
   if (Xa>=-6000 && Xa<=-2000 && Ya>=11000 && Ya<=17000) 
   {
      output_b(0b11110011);
      output_d(0b11000000);
      delay_ms(100);
   }
   
   
   /* ############################################################################################################### */
}

void x3()
{
   /* ############################################################################################################### */
   // X'in 0 konumu icin olasiliklar
   
   
   if (Xa>=-2000 && Xa<=2000 && Ya>=-17000 && Ya<=-11000) 
   {
      output_b(0b11100111);
      output_d(0b00000011);
      delay_ms(100);
   }
   
   if (Xa>=-2000 && Xa<=2000 && Ya>=-11000 && Ya<=-6000) 
   {
      output_b(0b11100111);
      output_d(0b00000110);
      delay_ms(100);
   }
   
   if (Xa>=-2000 && Xa<=2000 && Ya>=-6000 && Ya<=-2000) 
   {
      output_b(0b11100111);
      output_d(0b00001100);
      delay_ms(100);
   }
   
   if (Xa>=-2000 && Xa<=2000 && Ya>=-2000 && Ya<=2000) 
   {
      output_b(0b11100111);
      output_d(0b00011000);
      delay_ms(100);
   }
   
   if (Xa>=-2000 && Xa<=2000 && Ya>=2000 && Ya<=6000) 
   {
      output_b(0b11100111);
      output_d(0b00110000);
      delay_ms(100);
   }
   
   if (Xa>=-2000 && Xa<=2000 && Ya>=6000 && Ya<=11000) 
   {
      output_b(0b11100111);
      output_d(0b01100000);
      delay_ms(100);
   }
   
   if (Xa>=-2000 && Xa<=2000 && Ya>=11000 && Ya<=17000) 
   {
      output_b(0b11100111);
      output_d(0b11000000);
      delay_ms(100);
   }
   
   
   /* ############################################################################################################### */  
}

void x4()
{
   /* ############################################################################################################### */
   // X'in 1 konumu icin olasiliklar
   
   
   if (Xa>=2000 && Xa<=6000 && Ya>=-17000 && Ya<=-11000) 
   {
      output_b(0b11001111);
      output_d(0b00000011);
      delay_ms(100);
   }
   
   if (Xa>=2000 && Xa<=6000 && Ya>=-11000 && Ya<=-6000) 
   {
      output_b(0b11001111);
      output_d(0b00000110);
      delay_ms(100);
   }
   
   if (Xa>=2000 && Xa<=6000 && Ya>=-6000 && Ya<=-2000) 
   {
      output_b(0b11001111);
      output_d(0b00001100);
      delay_ms(100);
   }
   
   if (Xa>=2000 && Xa<=6000 && Ya>=-2000 && Ya<=2000) 
   {
      output_b(0b11001111);
      output_d(0b00011000);
      delay_ms(100);
   }
   
   if (Xa>=2000 && Xa<=6000 && Ya>=2000 && Ya<=6000) 
   {
      output_b(0b11001111);
      output_d(0b00110000);
      delay_ms(100);
   }
   
   if (Xa>=2000 && Xa<=6000 && Ya>=6000 && Ya<=11000) 
   {
      output_b(0b11001111);
      output_d(0b01100000);
      delay_ms(100);
   }
   
   if (Xa>=2000 && Xa<=6000 && Ya>=11000 && Ya<=17000) 
   {
      output_b(0b11001111);
      output_d(0b11000000);
      delay_ms(100);
   }
   
   
   /* ############################################################################################################### */
}

void x5()
{
   /* ############################################################################################################### */
   // X'in 2 konumu icin olasiliklar
   
   
   if (Xa>=6000 && Xa<=11000 && Ya>=-17000 && Ya<=-11000) 
   {
      output_b(0b10011111);
      output_d(0b00000011);
      delay_ms(100);
   }
   
   if (Xa>=6000 && Xa<=11000 && Ya>=-11000 && Ya<=-6000) 
   {
      output_b(0b10011111);
      output_d(0b00000110);
      delay_ms(100);
   }
   
   if (Xa>=6000 && Xa<=11000 && Ya>=-6000 && Ya<=-2000) 
   {
      output_b(0b10011111);
      output_d(0b00001100);
      delay_ms(100);
   }
   
   if (Xa>=6000 && Xa<=11000 && Ya>=-2000 && Ya<=2000) 
   {
      output_b(0b10011111);
      output_d(0b00011000);
      delay_ms(100);
   }
   
   if (Xa>=6000 && Xa<=11000 && Ya>=2000 && Ya<=6000) 
   {
      output_b(0b10011111);
      output_d(0b00110000);
      delay_ms(100);
   }
   
   if (Xa>=6000 && Xa<=11000 && Ya>=6000 && Ya<=11000) 
   {
      output_b(0b10011111);
      output_d(0b01100000);
      delay_ms(100);
   }
   
   if (Xa>=6000 && Xa<=11000 && Ya>=11000 && Ya<=17000) 
   {
      output_b(0b10011111);
      output_d(0b11000000);
      delay_ms(100);
   }
   
   
   /* ############################################################################################################### */
}

void x6()
{
   /* ############################################################################################################### */
   // X'in 3 konumu icin olasiliklar
   
   
   if (Xa>=11000 && Xa<=17000 && Ya>=-17000 && Ya<=-11000) 
   {
      output_b(0b00111111);
      output_d(0b00000011);
      delay_ms(100);
   }
   
   if (Xa>=11000 && Xa<=17000 && Ya>=-11000 && Ya<=-6000) 
   {
      output_b(0b00111111);
      output_d(0b00000110);
      delay_ms(100);
   }
   
   if (Xa>=11000 && Xa<=17000 && Ya>=-6000 && Ya<=-2000) 
   {
      output_b(0b00111111);
      output_d(0b00001100);
      delay_ms(100);
   }
   
   if (Xa>=11000 && Xa<=17000 && Ya>=-2000 && Ya<=2000) 
   {
      output_b(0b00111111);
      output_d(0b00011000);
      delay_ms(100);
   }
   
   if (Xa>=11000 && Xa<=17000 && Ya>=2000 && Ya<=6000) 
   {
      output_b(0b00111111);
      output_d(0b00110000);
      delay_ms(100);
   }
   
   if (Xa>=11000 && Xa<=17000 && Ya>=6000 && Ya<=11000) 
   {
      output_b(0b00111111);
      output_d(0b01100000);
      delay_ms(100);
   }
   
   if (Xa>=11000 && Xa<=17000 && Ya>=11000 && Ya<=17000) 
   {
      output_b(0b00111111);
      output_d(0b11000000);
      delay_ms(100);
   }
   
   
   /* ############################################################################################################### */
}

void main()
{
   set_tris_b(0x00);
   set_tris_d(0x00);
   
   delay_ms(2);
   
   mpu6050_init();
   
   for(int i=0; i<100; i++)
   {
      output_b(0b10011001);
      output_d(0b00000010);
      delay_ms(5);
      
      output_b(0b00000000);
      output_d(0b00000100);
      delay_ms(5);
      
      output_b(0b00000000);
      output_d(0b00001000);
      delay_ms(5);
      
      output_b(0b10000001);
      output_d(0b00010000);
      delay_ms(5);
      
      output_b(0b11000011);
      output_d(0b00100000);
      delay_ms(5);
      
      output_b(0b11100111);
      output_d(0b00100000);
      delay_ms(5);
   }
    
   while(1)
   {
      A_data[0]=mpu6050_read(0x3B); //X eksen(LSB) ilk biti okunuyor
      A_data[1]=mpu6050_read(0x3C); //X eksen(MSB) son biti okunuyor
      A_data[2]=mpu6050_read(0x3D); //Y eksen(LSB) ilk biti okunuyor
      A_data[3]=mpu6050_read(0x3E); //Y eksen(MSB) son biti okunuyor
        
      Xa=make16(A_data[0],A_data[1]);
      Ya=make16(A_data[2],A_data[3]);                
       
      x0();
      x1();
      x2();
      x3();
      x4();
      x5();
      x6();
       
      delay_ms(2);
   }
   
}
